se5 <- aggregate(time5.growth ~ Parental.Performance*Treatment, data=G.mass, std.error, na.rm=T)
T5 <- cbind(mean5, se5$time5.growth)
colnames(T5) <- c("Parental.Performance", "Treatment",  "mean", "se")
T5$Time <- "July 15"
mean6 <- aggregate(time6.growth ~ Parental.Performance*Treatment, data=G.mass, mean, na.rm=T)
se6 <- aggregate(time6.growth ~ Parental.Performance*Treatment, data=G.mass, std.error, na.rm=T)
T6 <- cbind(mean6, se6$time6.growth)
colnames(T6) <- c("Parental.Performance", "Treatment",  "mean", "se")
T6$Time <- "August 12"
G <- rbind(T1, T2, T3, T6)
G$TS <- c("BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH")
FigX <- ggplot(G, aes(x=Time, y=mean, group=TS)) +
geom_errorbar(aes(ymin=G$mean-G$se, ymax=G$mean+G$se), colour="black", width=.1, position = position_dodge(width = 0.2)) + #plot sem
geom_point(aes(shape=Parental.Performance), position = position_dodge(width = 0.2), size=4) + #plot points
scale_shape_manual(values=c(1,19)) + #sets point shape manually
geom_line(aes(linetype=Treatment), position = position_dodge(width = 0.2), size = 0.5) + #add lines
xlab("Time") + #Label the X Axis
ylab("Growth % per Day") + #Label the Y Axis
#ylim(-0.05, 0.3) + #set Y limits
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.title=element_text(size=14,face="bold"), #Set axis format
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
FigX
########Surface area normalized
#Surface Area
data.sa <- reshape(BW.data, timevar = "TimePoint", drop = c("Tank", "QC", "Mass.g","Temp.C"), idvar=c("Fragment.ID","Parental.Performance", "Treatment", "Parent.ID","Cohort" ), direction="wide")
FoilStnd<-read.csv('foil.standards.csv')
FoilStnd.lm <- lm(FoilStnd$surface.area.cm2 ~ FoilStnd$mass.g)
summary(FoilStnd.lm)
summary(FoilStnd.lm)$r.squared
FoilStnd.lm$coef
SA.Data <- read.csv('Mcap.surface.area.foil.csv', header=T, sep=",", na.strings="NA")
SA.Data$SA.final.cm2 <- (FoilStnd.lm$coef[2]*SA.Data$final.mass.g)+FoilStnd.lm$coef[1]
SA.Data$SA.dead.cm2 <- (FoilStnd.lm$coef[2]*SA.Data$dead.mass.g)+FoilStnd.lm$coef[1]
SA.Data$SA.total.initial.cm2 <- (FoilStnd.lm$coef[2]*(SA.Data$dead.mass.g+SA.Data$final.mass.g))+FoilStnd.lm$coef[1]
data.sa <- merge(data.sa, SA.Data, by="Fragment.ID")
#Growth Normalized to surface area mg CaCO3 cm-2 d-1
data.sa$time1.growth <- (((data.sa$Dry.Weigh.g.Time1 - data.sa$Dry.Weigh.g.Time0)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time1 #calculate growth rate for time1
data.sa$time2.growth <- (((data.sa$Dry.Weigh.g.Time2 - data.sa$Dry.Weigh.g.Time1)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time2 #calculate growth rate for time2
data.sa$time3.growth <- (((data.sa$Dry.Weigh.g.Time3 - data.sa$Dry.Weigh.g.Time2)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time3 #calculate growth rate for time3
data.sa$time4.growth <- (((data.sa$Dry.Weigh.g.Time4 - data.sa$Dry.Weigh.g.Time3)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time4 #calculate growth rate for time4
data.sa$time5.growth <- (((data.sa$Dry.Weigh.g.Time5 - data.sa$Dry.Weigh.g.Time4)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time5 #calculate growth rate for time5
data.sa$time6.growth <- (((data.sa$Dry.Weigh.g.Time6 - data.sa$Dry.Weigh.g.Time5)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time6 #calculate growth rate for time6
#reduced dataset of surface area normalized growth
G.SA <- data.sa[,c(1:5,39:44)]
mean1 <- aggregate(time1.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se1 <- aggregate(time1.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T1 <- cbind(mean1, se1$time1.growth)
colnames(T1) <- c("Parental.Performance", "Treatment",  "mean", "se")
T1$Time <- "April 01"
mean2 <- aggregate(time2.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se2 <- aggregate(time2.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T2 <- cbind(mean2, se2$time2.growth)
colnames(T2) <- c("Parental.Performance", "Treatment",  "mean", "se")
T2$Time <- "April 20"
mean3 <- aggregate(time3.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se3 <- aggregate(time3.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T3 <- cbind(mean3, se3$time3.growth)
colnames(T3) <- c("Parental.Performance", "Treatment",  "mean", "se")
T3$Time <- "May 25"
mean4 <- aggregate(time4.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se4 <- aggregate(time4.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T4 <- cbind(mean4, se4$time4.growth)
colnames(T4) <- c("Parental.Performance", "Treatment",  "mean", "se")
T4$Time <- "June 17"
mean5 <- aggregate(time5.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se5 <- aggregate(time5.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T5 <- cbind(mean5, se5$time5.growth)
colnames(T5) <- c("Parental.Performance", "Treatment",  "mean", "se")
T5$Time <- "July 15"
mean6 <- aggregate(time6.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se6 <- aggregate(time6.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T6 <- cbind(mean6, se6$time6.growth)
colnames(T6) <- c("Parental.Performance", "Treatment",  "mean", "se")
T6$Time <- "August 12"
Growth.SA <- rbind(T1, T2, T3, T6)
Growth.SA$TS <- c("BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH", "BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH", "BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH")
Fig.G.SA <- ggplot(Growth.SA, aes(x=Time, y=mean, group=TS)) +
geom_errorbar(aes(ymin=Growth.SA$mean-Growth.SA$se, ymax=Growth.SA$mean+Growth.SA$se), colour="black", width=.1, position = position_dodge(width = 0.2)) + #plot sem
geom_point(aes(shape=Parental.Performance), position = position_dodge(width = 0.2), size=4) + #plot points
scale_shape_manual(values=c(1,19)) + #sets point shape manually
geom_line(aes(linetype=Treatment), position = position_dodge(width = 0.2), size = 0.5) + #add lines
xlab("Time") + #Label the X Axis
ylab("Growth mg cm-2 d-1") + #Label the Y Axis
#ylim(-0.05, 0.3) + #set Y limits
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.title=element_text(size=14,face="bold"), #Set axis format
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
Fig.G.SA
G.SA <- G.SA[,-c(9:10)]#remove T4 and T5
G.SA
View(G.SA)
G.RM <- melt(G.SA) #reshape into long format
View(G.RM)
Growth.RM.lme <- lme(value ~ Parental.Performance*Treatment, random = ~ variable|Fragment.ID, data=na.omit(G.RM)) #repeated measures ANOVA with random intercept but not slope (clonal fragments expect to respond the same)
Growth.results <- summary(Growth.RM.lme) #view RM ANOVA summary
Growth.stats <- anova(Growth.RM.lme) #view F and p values
Growth.results
Growth.stats
Growth.RM.posthoc <- lsmeans(Growth.RM.lme, specs=c("variable","Parental.Performance","Treatment")) #calculate MS means
Growth.RM.posthoc #view results
library("lsmeans") #mixed model posthoc  statistical comparisons
Growth.RM.posthoc <- lsmeans(Growth.RM.lme, specs=c("variable","Parental.Performance","Treatment")) #calculate MS means
Growth.RM.posthoc #view results
Growth.RM.posthoc
Growth.RM.lme <- lme(value ~ variable*Parental.Performance*Treatment, random = ~ variable|Fragment.ID, data=na.omit(G.RM)) #repeated measures ANOVA with random intercept but not slope (clonal fragments expect to respond the same)
Growth.results <- summary(Growth.RM.lme) #view RM ANOVA summary
Growth.stats <- anova(Growth.RM.lme) #view F and p values
Growth.stats
Growth.RM.posthoc <- lsmeans(Growth.RM.lme, specs=c("variable","Parental.Performance","Treatment")) #calculate MS means
Growth.RM.posthoc #view results
Growth.RM.posthoc.p <- contrast(Growth.RM.posthoc, method="pairwise", by=c("Parental.Performance","variable")) #contrast treatment groups within a species at each time point
Growth.RM.posthoc.p #view results
Growth.RM.posthoc <- lsmeans(Growth.RM.lme, specs=c("variable","Parental.Performance")) #calculate MS means
Growth.RM.posthoc #view results
Growth.RM.posthoc.p <- contrast(Growth.RM.posthoc, method="pairwise", by=c("Parental.Performance","variable")) #contrast treatment groups within a species at each time point
Growth.RM.posthoc.p #view results
Growth.RM.posthoc
Growth.RM.posthoc.p <- contrast(Growth.RM.posthoc, method="pairwise", by=c("Parental.Performance","variable")) #contrast treatment groups within a species at each time point
Growth.RM.posthoc.p <- contrast(Growth.RM.posthoc, method="pairwise", by=c("Parental.Performance")) #contrast treatment groups within a species at each time point
Growth.RM.posthoc.p
Growth.RM.posthoc.p <- contrast(Growth.RM.posthoc, method="pairwise", by=c("variable")) #contrast treatment groups within a species at each time point
Growth.RM.posthoc.p #view results
hist(Growth.RM.lme$residuals) #histogram
qqnorm(Growth.RM.lme$residuals) # normal quantile plot
abline(1)
?abline
qqnorm(Growth.RM.lme$residuals) # normal quantile plot
abline(1,0)
abline(1,1)
abline(Growth.RM.lme)
hist(Growth.RM.lme$residuals) #histogram
qqnorm(Growth.RM.lme$residuals) # normal quantile plot
data$time4.growth
hist(data$time4.growth)
hist(data$time5.growth)
View(data)
View(BW.data)
View(data)
min(data$time4.growth)
max(data$time4.growth)
min(data$time5.growth)
min(na.omit(data$time5.growth))
min(na.omit(data$time4.growth))
max(na.omit(data$time4.growth))
max(na.omit(data$time5.growth))
min(na.omit(data$time1.growth))
max(na.omit(data$time1.growth))
View(data)
min(na.omit(data$time1.growth))
max(na.omit(data$time1.growth))
range(na.omit(data$time1.growth))
range(na.omit(data$time1.growth))
range(na.omit(data$time2.growth))
range(na.omit(data$time3.growth))
range(na.omit(data$time4.growth))
range(na.omit(data$time5.growth))
range(na.omit(data$time6.growth))
View(data)
View(data)
data[<min & >max,c(34:39)]
mn <- -0.09
mx <- 0.33
<mn & >mx,c(34:39)
<mn
<mn
< mn
mn <- -0.09
mx <- 0.33
data[data$time1.growth < mn]
data$time1.growth [data$time1.growth < mn]
data$time1.growth [na.omit(data$time1.growth) < mn]
na.omit(data$time1.growth)
data$time1.growth [na.omit(data$time2.growth) < mn]
data$time1.growth [na.omit(data$time3.growth) < mn]
data$time1.growth [na.omit(data$time4.growth) < mn]
data$time1.growth [na.omit(data$time5.growth) < mn]
mn <- -0.09
mn
data$time1.growth [na.omit(data$time6.growth) < mn]
data$time1.growth [na.omit(data$time4.growth) > mn]
range(na.omit(data$time4.growth))
data$time1.growth [na.omit(data$time4.growth) < mn]
range(na.omit(data$time4.growth))
data$time1.growth [na.omit(data$time4.growth) < -0.09]
data$time1.growth [na.omit(data$time4.growth) <= -0.09]
data$time1.growth [na.omit(data$time4.growth) <= (-0.09)]
data$time1.growth [na.omit(data$time4.growth) >= -0.09]
data$time4.growth [na.omit(data$time4.growth) >= -0.09]
data$time4.growth [na.omit(data$time4.growth) <= -0.09]
range(na.omit(data$time4.growth))
data$time4.growth [na.omit(data$time4.growth) >= -0.09]
data$time4.growth [na.omit(data$time4.growth) <= -0.09| >=0.33]
data$time4.growth [na.omit(data$time4.growth) <= -0.09]
data$time4.growth
data$time4.growth[na.omit(data$time4.growth) <= -0.09]
data$time1.growth <- (((data$Dry.Weigh.g.Time1 - data$Dry.Weigh.g.Time0)/data$Dry.Weigh.g.Time0)*100)/data$Days.Time1 #calculate growth rate for time1
data$time2.growth <- (((data$Dry.Weigh.g.Time2 - data$Dry.Weigh.g.Time1)/data$Dry.Weigh.g.Time1)*100)/data$Days.Time2 #calculate growth rate for time2
data$time3.growth <- (((data$Dry.Weigh.g.Time3 - data$Dry.Weigh.g.Time2)/data$Dry.Weigh.g.Time2)*100)/data$Days.Time3 #calculate growth rate for time2
data$time4.growth <- (((data$Dry.Weigh.g.Time4 - data$Dry.Weigh.g.Time3)/data$Dry.Weigh.g.Time3)*100)/data$Days.Time4 #calculate growth rate for time2
data$time5.growth <- (((data$Dry.Weigh.g.Time5 - data$Dry.Weigh.g.Time4)/data$Dry.Weigh.g.Time4)*100)/data$Days.Time5 #calculate growth rate for time2
data$time6.growth <- (((data$Dry.Weigh.g.Time6 - data$Dry.Weigh.g.Time5)/data$Dry.Weigh.g.Time5)*100)/data$Days.Time6 #calculate growth rate for time2
data$time1.growth [na.omit(data$time1.growth) < mn]
data$time2.growth [na.omit(data$time2.growth) < mn]
data$time1.growth[na.omit(data$time1.growth) < mn] <- NA
data$time2.growth[na.omit(data$time2.growth) < mn] <- NA
data$time3.growth[na.omit(data$time3.growth) < mn] <- NA
data$time4.growth[na.omit(data$time4.growth) < mn] <- NA
data$time5.growth[na.omit(data$time5.growth) < mn] <- NA
data$time6.growth[na.omit(data$time6.growth) < mn] <- NA
data$time1.growth <- (((data$Dry.Weigh.g.Time1 - data$Dry.Weigh.g.Time0)/data$Dry.Weigh.g.Time0)*100)/data$Days.Time1 #calculate growth rate for time1
data$time2.growth <- (((data$Dry.Weigh.g.Time2 - data$Dry.Weigh.g.Time1)/data$Dry.Weigh.g.Time1)*100)/data$Days.Time2 #calculate growth rate for time2
data$time3.growth <- (((data$Dry.Weigh.g.Time3 - data$Dry.Weigh.g.Time2)/data$Dry.Weigh.g.Time2)*100)/data$Days.Time3 #calculate growth rate for time2
data$time4.growth <- (((data$Dry.Weigh.g.Time4 - data$Dry.Weigh.g.Time3)/data$Dry.Weigh.g.Time3)*100)/data$Days.Time4 #calculate growth rate for time2
data$time5.growth <- (((data$Dry.Weigh.g.Time5 - data$Dry.Weigh.g.Time4)/data$Dry.Weigh.g.Time4)*100)/data$Days.Time5 #calculate growth rate for time2
data$time6.growth <- (((data$Dry.Weigh.g.Time6 - data$Dry.Weigh.g.Time5)/data$Dry.Weigh.g.Time5)*100)/data$Days.Time6 #calculate growth rate for time2
range(na.omit(data$time1.growth))
range(na.omit(data$time2.growth))
range(na.omit(data$time3.growth))
range(na.omit(data$time4.growth))
range(na.omit(data$time5.growth))
range(na.omit(data$time6.growth))
mn <- -0.09
mx <- 0.33
data$time4.growth[na.omit(data$time4.growth) < mn]
data$time5.growth[na.omit(data$time5.growth) < mn]
data$time5.growth
na.omit(data$time5.growth)
data$time4.growth[data$time4.growth < mn]
data$time1.growth[data$time1.growth < mn] <- NA
data$time2.growth[data$time2.growth < mn] <- NA
data$time3.growth[data$time3.growth < mn] <- NA
data$time4.growth[data$time4.growth < mn] <- NA
data$time5.growth[data$time5.growth < mn] <- NA
data$time6.growth[data$time6.growth < mn] <- NA
data$time1.growth[data$time1.growth > mx] <- NA
data$time2.growth[data$time2.growth > mx] <- NA
data$time3.growth[data$time3.growth > mx] <- NA
data$time4.growth[data$time4.growth > mx] <- NA
data$time5.growth[data$time5.growth > mx] <- NA
data$time6.growth[data$time6.growth > mx] <- NA
#reduced dataset of mass normalized growth
G.mass <- data[,c(1:5,34:39)]
mean1 <- aggregate(time1.growth ~ Parental.Performance*Treatment, data=G.mass, mean, na.rm=T)
se1 <- aggregate(time1.growth ~ Parental.Performance*Treatment, data=G.mass, std.error, na.rm=T)
T1 <- cbind(mean1, se1$time1.growth)
colnames(T1) <- c("Parental.Performance", "Treatment",	"mean", "se")
T1$Time <- "April 01"
mean2 <- aggregate(time2.growth ~ Parental.Performance*Treatment, data=G.mass, mean, na.rm=T)
se2 <- aggregate(time2.growth ~ Parental.Performance*Treatment, data=G.mass, std.error, na.rm=T)
T2 <- cbind(mean2, se2$time2.growth)
colnames(T2) <- c("Parental.Performance", "Treatment",  "mean", "se")
T2$Time <- "April 20"
mean3 <- aggregate(time3.growth ~ Parental.Performance*Treatment, data=G.mass, mean, na.rm=T)
se3 <- aggregate(time3.growth ~ Parental.Performance*Treatment, data=G.mass, std.error, na.rm=T)
T3 <- cbind(mean3, se3$time3.growth)
colnames(T3) <- c("Parental.Performance", "Treatment",  "mean", "se")
T3$Time <- "May 25"
mean4 <- aggregate(time4.growth ~ Parental.Performance*Treatment, data=G.mass, mean, na.rm=T)
se4 <- aggregate(time4.growth ~ Parental.Performance*Treatment, data=G.mass, std.error, na.rm=T)
T4 <- cbind(mean4, se4$time4.growth)
colnames(T4) <- c("Parental.Performance", "Treatment",  "mean", "se")
T4$Time <- "June 17"
mean5 <- aggregate(time5.growth ~ Parental.Performance*Treatment, data=G.mass, mean, na.rm=T)
se5 <- aggregate(time5.growth ~ Parental.Performance*Treatment, data=G.mass, std.error, na.rm=T)
T5 <- cbind(mean5, se5$time5.growth)
colnames(T5) <- c("Parental.Performance", "Treatment",  "mean", "se")
T5$Time <- "July 15"
mean6 <- aggregate(time6.growth ~ Parental.Performance*Treatment, data=G.mass, mean, na.rm=T)
se6 <- aggregate(time6.growth ~ Parental.Performance*Treatment, data=G.mass, std.error, na.rm=T)
T6 <- cbind(mean6, se6$time6.growth)
colnames(T6) <- c("Parental.Performance", "Treatment",  "mean", "se")
T6$Time <- "August 12"
G <- rbind(T1, T2, T3, T6)
G$TS <- c("BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH")
FigX <- ggplot(G, aes(x=Time, y=mean, group=TS)) +
geom_errorbar(aes(ymin=G$mean-G$se, ymax=G$mean+G$se), colour="black", width=.1, position = position_dodge(width = 0.2)) + #plot sem
geom_point(aes(shape=Parental.Performance), position = position_dodge(width = 0.2), size=4) + #plot points
scale_shape_manual(values=c(1,19)) + #sets point shape manually
geom_line(aes(linetype=Treatment), position = position_dodge(width = 0.2), size = 0.5) + #add lines
xlab("Time") + #Label the X Axis
ylab("Growth % per Day") + #Label the Y Axis
#ylim(-0.05, 0.3) + #set Y limits
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.title=element_text(size=14,face="bold"), #Set axis format
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
FigX
G <- rbind(T1, T2, T3, T4, T5, T6)
G$TS <- c("BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH")
FigX <- ggplot(G, aes(x=Time, y=mean, group=TS)) +
geom_errorbar(aes(ymin=G$mean-G$se, ymax=G$mean+G$se), colour="black", width=.1, position = position_dodge(width = 0.2)) + #plot sem
geom_point(aes(shape=Parental.Performance), position = position_dodge(width = 0.2), size=4) + #plot points
scale_shape_manual(values=c(1,19)) + #sets point shape manually
geom_line(aes(linetype=Treatment), position = position_dodge(width = 0.2), size = 0.5) + #add lines
xlab("Time") + #Label the X Axis
ylab("Growth % per Day") + #Label the Y Axis
#ylim(-0.05, 0.3) + #set Y limits
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.title=element_text(size=14,face="bold"), #Set axis format
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
FigX
########Surface area normalized
#Surface Area
data.sa <- reshape(BW.data, timevar = "TimePoint", drop = c("Tank", "QC", "Mass.g","Temp.C"), idvar=c("Fragment.ID","Parental.Performance", "Treatment", "Parent.ID","Cohort" ), direction="wide")
FoilStnd<-read.csv('foil.standards.csv')
FoilStnd.lm <- lm(FoilStnd$surface.area.cm2 ~ FoilStnd$mass.g)
summary(FoilStnd.lm)
summary(FoilStnd.lm)$r.squared
FoilStnd.lm$coef
SA.Data <- read.csv('Mcap.surface.area.foil.csv', header=T, sep=",", na.strings="NA")
SA.Data$SA.final.cm2 <- (FoilStnd.lm$coef[2]*SA.Data$final.mass.g)+FoilStnd.lm$coef[1]
SA.Data$SA.dead.cm2 <- (FoilStnd.lm$coef[2]*SA.Data$dead.mass.g)+FoilStnd.lm$coef[1]
SA.Data$SA.total.initial.cm2 <- (FoilStnd.lm$coef[2]*(SA.Data$dead.mass.g+SA.Data$final.mass.g))+FoilStnd.lm$coef[1]
data.sa <- merge(data.sa, SA.Data, by="Fragment.ID")
#Growth Normalized to surface area mg CaCO3 cm-2 d-1
data.sa$time1.growth <- (((data.sa$Dry.Weigh.g.Time1 - data.sa$Dry.Weigh.g.Time0)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time1 #calculate growth rate for time1
data.sa$time2.growth <- (((data.sa$Dry.Weigh.g.Time2 - data.sa$Dry.Weigh.g.Time1)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time2 #calculate growth rate for time2
data.sa$time3.growth <- (((data.sa$Dry.Weigh.g.Time3 - data.sa$Dry.Weigh.g.Time2)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time3 #calculate growth rate for time3
data.sa$time4.growth <- (((data.sa$Dry.Weigh.g.Time4 - data.sa$Dry.Weigh.g.Time3)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time4 #calculate growth rate for time4
data.sa$time5.growth <- (((data.sa$Dry.Weigh.g.Time5 - data.sa$Dry.Weigh.g.Time4)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time5 #calculate growth rate for time5
data.sa$time6.growth <- (((data.sa$Dry.Weigh.g.Time6 - data.sa$Dry.Weigh.g.Time5)*1000/data.sa$SA.total.initial.cm2))/data.sa$Days.Time6 #calculate growth rate for time6
range(na.omit(data.sa$time1.growth))
range(na.omit(data.sa$time2.growth))
range(na.omit(data.sa$time3.growth))
range(na.omit(data.sa$time4.growth))
range(na.omit(data.sa$time5.growth))
range(na.omit(data.sa$time6.growth))
mn <- -0.62
mx <- 1.45
data.sa$time1.growth[data.sa$time1.growth < mn] <- NA
data.sa$time2.growth[data.sa$time2.growth < mn] <- NA
data.sa$time3.growth[data.sa$time3.growth < mn] <- NA
data.sa$time4.growth[data.sa$time4.growth < mn] <- NA
data.sa$time5.growth[data.sa$time5.growth < mn] <- NA
data.sa$time6.growth[data.sa$time6.growth < mn] <- NA
data.sa$time1.growth[data.sa$time1.growth > mx] <- NA
data.sa$time2.growth[data.sa$time2.growth > mx] <- NA
data.sa$time3.growth[data.sa$time3.growth > mx] <- NA
data.sa$time4.growth[data.sa$time4.growth > mx] <- NA
data.sa$time5.growth[data.sa$time5.growth > mx] <- NA
data.sa$time6.growth[data.sa$time6.growth > mx] <- NA
#reduced dataset of surface area normalized growth
G.SA <- data.sa[,c(1:5,39:44)]
mean1 <- aggregate(time1.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se1 <- aggregate(time1.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T1 <- cbind(mean1, se1$time1.growth)
colnames(T1) <- c("Parental.Performance", "Treatment",  "mean", "se")
T1$Time <- "April 01"
mean2 <- aggregate(time2.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se2 <- aggregate(time2.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T2 <- cbind(mean2, se2$time2.growth)
colnames(T2) <- c("Parental.Performance", "Treatment",  "mean", "se")
T2$Time <- "April 20"
mean3 <- aggregate(time3.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se3 <- aggregate(time3.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T3 <- cbind(mean3, se3$time3.growth)
colnames(T3) <- c("Parental.Performance", "Treatment",  "mean", "se")
T3$Time <- "May 25"
mean4 <- aggregate(time4.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se4 <- aggregate(time4.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T4 <- cbind(mean4, se4$time4.growth)
colnames(T4) <- c("Parental.Performance", "Treatment",  "mean", "se")
T4$Time <- "June 17"
mean5 <- aggregate(time5.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se5 <- aggregate(time5.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T5 <- cbind(mean5, se5$time5.growth)
colnames(T5) <- c("Parental.Performance", "Treatment",  "mean", "se")
T5$Time <- "July 15"
mean6 <- aggregate(time6.growth ~ Parental.Performance*Treatment, data=G.SA, mean, na.rm=T)
se6 <- aggregate(time6.growth ~ Parental.Performance*Treatment, data=G.SA, std.error, na.rm=T)
T6 <- cbind(mean6, se6$time6.growth)
colnames(T6) <- c("Parental.Performance", "Treatment",  "mean", "se")
T6$Time <- "August 12"
Growth.SA <- rbind(T1, T2, T3, T6)
Growth.SA$TS <- c("BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH", "BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH", "BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH")
Fig.G.SA <- ggplot(Growth.SA, aes(x=Time, y=mean, group=TS)) +
geom_errorbar(aes(ymin=Growth.SA$mean-Growth.SA$se, ymax=Growth.SA$mean+Growth.SA$se), colour="black", width=.1, position = position_dodge(width = 0.2)) + #plot sem
geom_point(aes(shape=Parental.Performance), position = position_dodge(width = 0.2), size=4) + #plot points
scale_shape_manual(values=c(1,19)) + #sets point shape manually
geom_line(aes(linetype=Treatment), position = position_dodge(width = 0.2), size = 0.5) + #add lines
xlab("Time") + #Label the X Axis
ylab("Growth mg cm-2 d-1") + #Label the Y Axis
#ylim(-0.05, 0.3) + #set Y limits
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.title=element_text(size=14,face="bold"), #Set axis format
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
Fig.G.SA
Growth.SA <- rbind(T1, T2, T3, T4, T5, T6)
Growth.SA$TS <- c("BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH","BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH", "BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH", "BL-AMB", "UNBL-AMB", "BL-HIGH", "UNBL-HIGH")
Fig.G.SA <- ggplot(Growth.SA, aes(x=Time, y=mean, group=TS)) +
geom_errorbar(aes(ymin=Growth.SA$mean-Growth.SA$se, ymax=Growth.SA$mean+Growth.SA$se), colour="black", width=.1, position = position_dodge(width = 0.2)) + #plot sem
geom_point(aes(shape=Parental.Performance), position = position_dodge(width = 0.2), size=4) + #plot points
scale_shape_manual(values=c(1,19)) + #sets point shape manually
geom_line(aes(linetype=Treatment), position = position_dodge(width = 0.2), size = 0.5) + #add lines
xlab("Time") + #Label the X Axis
ylab("Growth mg cm-2 d-1") + #Label the Y Axis
#ylim(-0.05, 0.3) + #set Y limits
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.title=element_text(size=14,face="bold"), #Set axis format
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
Fig.G.SA
Fig.G.SA <- ggplot(Growth.SA, aes(x=Time, y=mean, group=TS)) +
geom_errorbar(aes(ymin=Growth.SA$mean-Growth.SA$se, ymax=Growth.SA$mean+Growth.SA$se), colour="black", width=.1, position = position_dodge(width = 0.2)) + #plot sem
geom_point(aes(shape=Parental.Performance), position = position_dodge(width = 0.2), size=4) + #plot points
scale_shape_manual(values=c(1,19)) + #sets point shape manually
geom_line(aes(linetype=Treatment), position = position_dodge(width = 0.2), size = 0.5) + #add lines
xlab("Time") + #Label the X Axis
ylab("Growth mg cm-2 d-1") + #Label the Y Axis
scale_x_discrete(limits=c("April01","April20","May25","June17", "July15", "August12")) +
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.title=element_text(size=14,face="bold"), #Set axis format
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
Fig.G.SA
?scale_x_discrete
View(G.SA)
View(Growth.SA)
Fig.G.SA <- ggplot(Growth.SA, aes(x=Time, y=mean, group=TS)) +
geom_errorbar(aes(ymin=Growth.SA$mean-Growth.SA$se, ymax=Growth.SA$mean+Growth.SA$se), colour="black", width=.1, position = position_dodge(width = 0.2)) + #plot sem
geom_point(aes(shape=Parental.Performance), position = position_dodge(width = 0.2), size=4) + #plot points
scale_shape_manual(values=c(1,19)) + #sets point shape manually
geom_line(aes(linetype=Treatment), position = position_dodge(width = 0.2), size = 0.5) + #add lines
xlab("Time") + #Label the X Axis
ylab("Growth mg cm-2 d-1") + #Label the Y Axis
scale_x_discrete(limits=Time, labels=c("April01","April20","May25","June17", "July15", "August12")) +
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.title=element_text(size=14,face="bold"), #Set axis format
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
Fig.G.SA
Fig.G.SA <- ggplot(Growth.SA, aes(x=Time, y=mean, group=TS)) +
geom_errorbar(aes(ymin=Growth.SA$mean-Growth.SA$se, ymax=Growth.SA$mean+Growth.SA$se), colour="black", width=.1, position = position_dodge(width = 0.2)) + #plot sem
geom_point(aes(shape=Parental.Performance), position = position_dodge(width = 0.2), size=4) + #plot points
scale_shape_manual(values=c(1,19)) + #sets point shape manually
geom_line(aes(linetype=Treatment), position = position_dodge(width = 0.2), size = 0.5) + #add lines
xlab("Time") + #Label the X Axis
ylab("Growth mg cm-2 d-1") + #Label the Y Axis
scale_x_discrete(labels=c("April01","April20","May25","June17", "July15", "August12")) +
theme_bw() + #Set the background color
theme(axis.line = element_line(color = 'black'), #Set the axes color
axis.title=element_text(size=14,face="bold"), #Set axis format
panel.border = element_blank(), #Set the border
panel.grid.major = element_blank(), #Set the major gridlines
panel.grid.minor = element_blank(), #Set the minor gridlines
plot.background =element_blank(), #Set the plot background
legend.key = element_blank()) #Set plot legend key
Fig.G.SA
range(na.omit(data.sa$time1.growth))
range(na.omit(data.sa$time2.growth))
range(na.omit(data.sa$time3.growth))
range(na.omit(data.sa$time4.growth))
range(na.omit(data.sa$time5.growth))
range(na.omit(data.sa$time6.growth))
G.SA <- G.SA[,-c(9:10)]#remove T4 and T5
G.RM <- melt(G.SA) #reshape into long format
Growth.RM.lme <- lme(value ~ variable*Parental.Performance*Treatment, random = ~ variable|Fragment.ID, data=na.omit(G.RM)) #repeated measures ANOVA with random intercept but not slope (clonal fragments expect to respond the same)
Growth.results <- summary(Growth.RM.lme) #view RM ANOVA summary
Growth.stats <- anova(Growth.RM.lme) #view F and p values
Growth.stats
Growth.RM.posthoc <- lsmeans(Growth.RM.lme, specs=c("variable","Parental.Performance")) #calculate MS means
Growth.RM.posthoc #view results
Growth.RM.posthoc.p <- contrast(Growth.RM.posthoc, method="pairwise", by=c("variable")) #contrast treatment groups within a species at each time point
Growth.RM.posthoc.p #view results
G.RM <- melt(Growth.SA) #reshape into long format
Growth.RM.lme <- lme(value ~ variable*Parental.Performance*Treatment, random = ~ variable|Fragment.ID, data=na.omit(G.RM)) #repeated measures ANOVA with random intercept but not slope (clonal fragments expect to respond the same)
Growth.results <- summary(Growth.RM.lme) #view RM ANOVA summary
Growth.stats <- anova(Growth.RM.lme) #view F and p values
Growth.stats
G.SA <- data.sa[,c(1:5,39:44)]
G.RM <- melt(G.SA) #reshape into long format
Growth.RM.lme <- lme(value ~ variable*Parental.Performance*Treatment, random = ~ variable|Fragment.ID, data=na.omit(G.RM)) #repeated measures ANOVA with random intercept but not slope (clonal fragments expect to respond the same)
Growth.results <- summary(Growth.RM.lme) #view RM ANOVA summary
Growth.stats <- anova(Growth.RM.lme) #view F and p values
Growth.stats
